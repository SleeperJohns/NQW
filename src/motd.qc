// Greeting Sound Controller
void() playsnd = 
{
	local entity client = find (world, classname, "player"); 
	while (client != world) 
	{
		sound (client, CHAN_OTHER, self.noise, 1, 3.9999); // Sleeper: With limited ability to make an announcer local to the player only that tracks the origin of player, this is the only best way.
		self.nextthink = time + 3;
		self.think = SUB_Remove;	
		client = find (client, classname, "player");
	}
//	sound (world, CHAN_OTHER, self.noise, 1, ATTN_NONE);
//	remove (self);
};
void(string soundToPlay, float delay) greet_announcer = 
{
	local entity speaker;
	
	if (speaker) remove (speaker); // No multiple sounds  
	
	speaker = spawn ();
	speaker.noise = soundToPlay;
	speaker.nextthink = time + delay;
	speaker.think = playsnd;
};

void() Spectator_Sounds = {greet_announcer ("wizard/wsight.wav", 1);};

// Make sounds when a player joins the server
void() MOTD_Sounds =
{
	// Client's arrival sound effect in coop/coop speedrun gametypes
	if (!cvar("sv_public") || cvar("sv_public") == 1)
	{
		if ((coop >= REIGNITED_COOP && coop <= ENHANCED_COOP && !deathmatch) || 
		    (deathmatch >= DM_DUEL && deathmatch <= DM_OneFlagCTF && !coop)) greet_announcer ("wizard/wsight.wav", 0.2);
	}
};

string() Write_Official_GameWorld_Names =
{
	if (gameworld == ID1) return "!\n\nGame World: iD1          ";		
	if (gameworld == HIPNOTIC) return "!\n\nGame World: Hipnotic     ";		
	if (gameworld == ROGUE) return "!\n\nGame World: Rogue        ";		
	if (gameworld == DOPA) return "!\n\nGame World: DOPA         ";		
	if (gameworld == MG1) return "!\n\nGame World: MG1          ";	
	if (gameworld == APOTHEOSIS) return "!\n\nGame World: Apotheosis   ";	
	if (gameworld == CUSTOM) return "!\n\nGame World: Custom       ";
	
	return "!\n\nGame World: Error        ";
};

string() Write_Campaign_Names = 
{
	if (cvar("deathmatch") || gameworld == CUSTOM || gameworld == APOTHEOSIS) return "";
	
	if (gameworld == ID1) return "\n        Campaign: Quake: The Offering";		
	if (gameworld == HIPNOTIC) return "\n        Campaign: Scourage Of Armagon";		
	if (gameworld == ROGUE) return "\n      Campaign: Dissolution Of Eternity";		
	if (gameworld == DOPA) return "\n        Campaign: Dimension Of The Past";		
	if (gameworld == MG1) 
	{
		if (cvar("horde")) return "";
		return "\n      Campaign: Dimension Of The Machine";	
	}	
	if (gameworld == CUSTOM) return "";	
	
	return "\n Campaign: Unknown";
};

string() Write_Gametypes =
{
	if (!cvar("deathmatch"))
	{
		if (!cvar("customcoop"))
		{
			if (!cvar("horde")) // Single Player/Co-Operative
			{
				if (cvar("coop") == 0) return "\n Game Type: Single Player";
				if (cvar("coop") == REIGNITED_COOP) return "\n  Game Type: Reignited Coop";
				if (cvar("coop") == CLASSIC_COOP) return "\nGame Type: Classic Coop";
				if (cvar("coop") == ENHANCED_COOP) return "\n Game Type: Enhanced Coop";
			}
			
			if (cvar("horde"))  // Horde Mode
			{
				if (cvar("coop") == 0) return "\n Game Type: Horde        ";
				if (cvar("coop") == REIGNITED_COOP) return "\n       Game Type: Horde (Reign. Coop)";
				if (cvar("coop") == CLASSIC_COOP) return "\n       Game Type: Horde (Class. Coop)";
				if (cvar("coop") == ENHANCED_COOP) return "\n       Game Type: Horde (Enhan. Coop)";
			}	
		}
		
		if (cvar("customcoop"))     // Custom Co-Op
		{
			if (cvar("coop") == 0) return "\nGame Type: Error       ";
			if (cvar("coop") == REIGNITED_COOP) return "\n     Game Type: Reignited Nu-Coop";
			if (cvar("coop") == CLASSIC_COOP) return "\n   Game Type: Classic Nu-Coop";
			if (cvar("coop") == ENHANCED_COOP) return "\n    Game Type: Enhanced Nu-Coop";
		}
	}
	
	if (!cvar("coop")) 		    // Deathmatch
	{
		if (cvar("deathmatch") == DM_DUEL) return "\nGame Type: Duel        ";
		if (cvar("deathmatch") == DM_FFA) 
		{
			if (cvar("instagib") == INSTAGIB_ON) return "\nGame Type: iFFA        ";
			if (cvar("instagib") == INSTAGIB_RAILWARZ) return "\nGame Type: Railwarz FFA";
			return "\nGame Type: Free For All";
		}
		if (cvar("deathmatch") == DM_TDM) 
		{
			if (cvar("instagib") == INSTAGIB_ON) return "\nGame Type: iTDM        ";
			if (cvar("instagib") == INSTAGIB_RAILWARZ) return "\nGame Type: Railwarz TDM";
			return "\n   Game Type: Team Deathmatch";
		}
		if (cvar("deathmatch") == DM_CTF) 
		{
			if (cvar("instagib") == INSTAGIB_ON) return "\nGame Type: iCTF        ";
			if (cvar("instagib") == INSTAGIB_RAILWARZ) return "\nGame Type: Railwarz CTF";
			return "\n    Game Type: Capture The Flag";
		}
		if (cvar("deathmatch") == DM_OneFlagCTF) 
		{
			if (cvar("instagib") == INSTAGIB_ON) return "\nGame Type: One Flag iCTF ";
			if (cvar("instagib") == INSTAGIB_RAILWARZ) return "\nGame Type: One Flag RWZ CTF    ";
			return "\nGame Type: One Flag CTF";
		}
	}
				
	return "\nGame Type: Error       ";
};

string() Write_Difficulty =
{	 	
	if (cvar("skill") == 0) return "\nSkill(0): Easy       ";
	if (cvar("skill") == 1) return "\nSkill(1): Normal     ";
	if (cvar("skill") == 2) return "\nSkill(2): Hard       ";
	if (cvar("skill") == 3) return "\n       Skill(3): Classic Nightmare!";
	if (cvar("skill") == 4) return "\n   Skill(4): KEX Nightmare!";
	if (cvar("skill") == 5) return "\n      Skill(5): Sleeper Must Die!";
	
	return "\nSkill(?): Error      ";
};

string() Write_Coop_Team_And_Self_Damage =
{
	if (cvar("teamplay") == COOP_FF_OFF) return "\nSelf Damage: Off           \nAlly Damage: Off           ";
	if (cvar("teamplay") == COOP_FF_ALT) return "\nSelf Damage: On            \nAlly Damage: Off           ";
	if (cvar("teamplay") == COOP_FF_DISABLED || cvar("teamplay") == COOP_FF_ON)
		return "\nSelf Damage: On            \nAlly Damage: On            ";
		
	return "\nSelf Damage: Error         \nAlly Damage: Error        ";
};

string() Write_DM_Team_Damage =
{
	if (cvar("teamplay") == TEAM_FF_DISABLED || cvar("teamplay") == TEAM_FF_OFF) return "\n   Team Damage: Off (Health Only)";
	if (cvar("teamplay") == TEAM_FF_NO_HEALTH_ARMOR_DMG) return "\nTeam Damage: Off           ";
	if (cvar("teamplay") == TEAM_FF_ON) return "\nTeam Damage: On            ";
	if (cvar("teamplay") == TEAM_FF_NO_ARMOR_DMG) return "\n      Team Damage: On (Armor Protected)";
	
	return "\nTeam Damage: Error         ";
};

string() Write_Runes =
{
	if (cvar("gamecfg") == GAMECFG_ORIGINAL_RUNES) return "\n     Runes: On (Original)";
	if (cvar("gamecfg") == GAMECFG_NQW_RUNES) return "\n       Runes: On (Team Arena)";
	if (cvar("gamecfg") == 0) return "\nRunes: Off     ";
	
	return "\nRunes: Error      ";
};

string() Write_DM_Teamknockback =
{
	if (cvar("teamknockback") == 0) return "\nTeam Knockback: Off              ";
	if (cvar("teamknockback") == 1) return "\nTeam Knockback: On               ";
	
	return "\nTeam Knockback: Error            ";
};

string() Write_Bunnyhop =
{
	if (cvar("allow_bunnyhopping") == 0) return "\nBunnyhopping: Off            ";
	if (cvar("allow_bunnyhopping") == 1) return "\nBunnyhopping: On             ";
	
	return "\nBunnyhopping: Error          ";
};

string() Write_Coop_Teamknockback =
{
	if (cvar("teamknockback") == 0) return "\nAlly Knockback: Off              ";
	if (cvar("teamknockback") == 1) return "\nAlly Knockback: On               ";
	
	return "\nAlly Knockback: Error            ";
};

string() Write_Player_Physics =
{	
	if (cvar("sv_nqplayerphysics") == 0) 
	{
		if (cvar("qw_physics_capped") == 0) return "\n   Player Physics: QuakeWorld(Uncapped)";
		if (cvar("qw_physics_capped") == 1) return "\n Player Physics: QuakeWorld(Capped)";
	}
	if (cvar("sv_nqplayerphysics") == 1) 	    return "\nPlayer Physics: Net Quake        ";
//	if (cvar("sv_nqplayerphysics") == -1) return "\nPlayer Physics: Quake II		";	

	return "\nPlayer Physics: Error            ";
};

string() Write_Player_Collision =
{
	if (cvar("player_collision") == FALSE) return "\nPlayer Collision: Off                ";
	if (cvar("player_collision") == TRUE) return "\nPlayer Collision: On                 ";
	
	 return "\nPlayer Collision: Error              ";
};

string() Write_Current_Num_Players_Coop =
{
	if (num_players <= 1) return "\n      Allies: 0              ";
	if (num_players == 2) return "\n      Allies: 1              ";
	if (num_players == 3) return "\n      Allies: 2              ";
	if (num_players == 4) return "\n      Allies: 3              ";
	if (num_players == 5) return "\n      Allies: 4              ";
	if (num_players == 6) return "\n      Allies: 5              ";
	if (num_players == 7) return "\n      Allies: 6              ";
	if (num_players == 8) return "\n      Allies: 7              ";
	if (num_players == 9) return "\n      Allies: 8              ";
	if (num_players == 10) return "\n      Allies: 9              ";
	if (num_players == 11) return "\n      Allies: 10             ";
	if (num_players == 12) return "\n      Allies: 11             ";
	if (num_players == 13) return "\n      Allies: 12             ";
	if (num_players == 14) return "\n      Allies: 13             ";
	if (num_players == 15) return "\n      Allies: 14             ";
	if (num_players == 16) return "\n      Allies: 15             ";
	if (num_players == 17) return "\n      Allies: 16             ";
	if (num_players == 18) return "\n      Allies: 17             ";
	if (num_players == 19) return "\n      Allies: 18             ";
	if (num_players == 20) return "\n      Allies: 19             ";
	if (num_players == 21) return "\n      Allies: 20             ";
	if (num_players == 22) return "\n      Allies: 21             ";
	if (num_players == 23) return "\n      Allies: 22             ";
	if (num_players == 24) return "\n      Allies: 23             ";
	if (num_players == 25) return "\n      Allies: 24             ";
	if (num_players == 26) return "\n      Allies: 25             ";
	if (num_players == 27) return "\n      Allies: 26             ";
	if (num_players == 28) return "\n      Allies: 27             ";
	if (num_players == 29) return "\n      Allies: 28             ";
	if (num_players == 30) return "\n      Allies: 29             ";
	if (num_players == 31) return "\n      Allies: 30             ";
	if (num_players == 32) return "\n      Allies: 31             ";
	if (num_players > 32) return "\n      Allies: 32+             ";
	return "\nPlayer Count: Error ";
};

string() Write_Current_Num_Players_DM =
{
	if (num_players <= 0) return "\n     Players: 0              ";
	if (num_players == 1) return "\n     Players: 1              ";
	if (num_players == 2) return "\n     Players: 2              ";
	if (num_players == 3) return "\n     Players: 3              ";
	if (num_players == 4) return "\n     Players: 4              ";
	if (num_players == 5) return "\n     Players: 5              ";
	if (num_players == 6) return "\n     Players: 6              ";
	if (num_players == 7) return "\n     Players: 7              ";
	if (num_players == 8) return "\n     Players: 8              ";
	if (num_players == 9) return "\n     Players: 9              ";
	if (num_players == 10) return "\n     Players: 10             ";
	if (num_players == 11) return "\n     Players: 11             ";
	if (num_players == 12) return "\n     Players: 12             ";
	if (num_players == 13) return "\n     Players: 13             ";
	if (num_players == 14) return "\n     Players: 14             ";
	if (num_players == 15) return "\n     Players: 15             ";
	if (num_players == 16) return "\n     Players: 16             ";
	if (num_players == 17) return "\n     Players: 17             ";
	if (num_players == 18) return "\n     Players: 18             ";
	if (num_players == 19) return "\n     Players: 19             ";
	if (num_players == 20) return "\n     Players: 20             ";
	if (num_players == 21) return "\n     Players: 21             ";
	if (num_players == 22) return "\n     Players: 22             ";
	if (num_players == 23) return "\n     Players: 23             ";
	if (num_players == 24) return "\n     Players: 24             ";
	if (num_players == 25) return "\n     Players: 25             ";
	if (num_players == 26) return "\n     Players: 26             ";
	if (num_players == 27) return "\n     Players: 27             ";
	if (num_players == 28) return "\n     Players: 28             ";
	if (num_players == 29) return "\n     Players: 29             ";
	if (num_players == 30) return "\n     Players: 30             ";
	if (num_players == 31) return "\n     Players: 31             ";
	if (num_players == 32) return "\n     Players: 32             ";
	if (num_players > 32) return "\n     Players: 32+             ";
	return "\nPlayer Count: Error ";
};

string() Write_Red_Members_Count =
{
	if (redteam <= 0) return "\nRed Members: 0             ";
	if (redteam == 1) return "\nRed Members: 1             ";
	if (redteam == 2) return "\nRed Members: 2             ";
	if (redteam == 3) return "\nRed Members: 3             ";
	if (redteam == 4) return "\nRed Members: 4             ";
	if (redteam == 5) return "\nRed Members: 5             ";
	if (redteam == 6) return "\nRed Members: 6             ";
	if (redteam == 7) return "\nRed Members: 7             ";
	if (redteam == 8) return "\nRed Members: 8             ";
	if (redteam == 9) return "\nRed Members: 9             ";
	if (redteam == 10) return "\nRed Members: 10            ";
	if (redteam == 11) return "\nRed Members: 11            ";
	if (redteam == 12) return "\nRed Members: 12            ";
	if (redteam == 13) return "\nRed Members: 13            ";
	if (redteam == 14) return "\nRed Members: 14            ";
	if (redteam == 15) return "\nRed Members: 15            ";
	if (redteam == 16) return "\nRed Members: 16            ";
	if (redteam > 16) return "\nRed Members: 16+           ";
	return "\nRed Members: Error";
};
string() Write_Blue_Members_Count =
{
	if (blueteam <= 0) return "\nBlue Members: 0              ";
	if (blueteam == 1) return "\nBlue Members: 1              ";
	if (blueteam == 2) return "\nBlue Members: 2              ";
	if (blueteam == 3) return "\nBlue Members: 3              ";
	if (blueteam == 4) return "\nBlue Members: 4              ";
	if (blueteam == 5) return "\nBlue Members: 5              ";
	if (blueteam == 6) return "\nBlue Members: 6              ";
	if (blueteam == 7) return "\nBlue Members: 7              ";
	if (blueteam == 8) return "\nBlue Members: 8              ";
	if (blueteam == 9) return "\nBlue Members: 9              ";
	if (blueteam == 10) return "\nBlue Members: 10             ";
	if (blueteam == 11) return "\nBlue Members: 11             ";
	if (blueteam == 12) return "\nBlue Members: 12             ";
	if (blueteam == 13) return "\nBlue Members: 13             ";
	if (blueteam == 14) return "\nBlue Members: 14             ";
	if (blueteam == 15) return "\nBlue Members: 15             ";
	if (blueteam == 16) return "\nBlue Members: 16             ";
	if (blueteam > 16) return "\nBlue Members: 16+            ";
	return "\nBlue Members: Error";
};

string() Write_Help_and_Info =
{
	return "\n\nFor help and info, type server-help\nin console.\n\n";
};

string() Write_MOTD_Removal_Message =
{
	return "To remove the prompt, JUMP or ATTACK\n\n";
};

/* // Sleeper: Just a static reference.
string() MOTD_Bounds =
{
	return "\x80\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x82";
};
*/

// Sleeper: Animates the top slider.
string MOTD_Animation_Frames_Top[] =
{ // 74
	"\x80\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",	
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
};

// Sleeper: Animates the bottom slider.
string MOTD_Animation_Frames_Bottom[] =
{ // 74
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",	
	"\x80\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x81\x82",	
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x81\x82",
	"\x80\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x81\x83\x81\x82",
};

.float motd_string_index_top;
.float motd_string_timer_top;
float MAX_MOTD_FRAMECOUNT_TOP = 74;
string() Animate_Top_MOTD_Frames =
{
	if (self.motd_string_timer_top < time) 
	{
		self.motd_string_index_top++;
		if (self.motd_string_index_top >= MAX_MOTD_FRAMECOUNT_TOP) self.motd_string_index_top = 0;
		self.motd_string_timer_top = time + 0.2;
	}		
	
	return MOTD_Animation_Frames_Top[self.motd_string_index_top];	
};

.float motd_string_index_bottom;
.float motd_string_timer_bottom;
float MAX_MOTD_FRAMECOUNT_BOTTOM = 74;
string() Animate_Bottom_MOTD_Frames =
{
	if (self.motd_string_timer_bottom < time) 
	{
		self.motd_string_index_bottom++;
		if (self.motd_string_index_bottom >= MAX_MOTD_FRAMECOUNT_BOTTOM) self.motd_string_index_bottom = 0;
		self.motd_string_timer_bottom = time + 0.2;
	}		
	
	return MOTD_Animation_Frames_Bottom[self.motd_string_index_bottom];	
};

void() Write_MOTD =
{		
	// Sleeper: Perhaps overdone, but this makes MOTD-making a whole lot more easier.
	string motd_gameworld        = Write_Official_GameWorld_Names (),
	       motd_campaign_name    = Write_Campaign_Names (),
	       motd_gametypes        = Write_Gametypes (),
	       motd_runes            = Write_Runes (),
	       motd_team_self_dmg    = Write_Coop_Team_And_Self_Damage (),
	       motd_team_damage      = Write_DM_Team_Damage (),
	       motd_team_coop_knock  = Write_Coop_Teamknockback (),
	       motd_team_dm_knock    = Write_DM_Teamknockback (),
	       motd_difficulty       = Write_Difficulty (),	
	       motd_bunnyhop	     = Write_Bunnyhop (),
	       motd_physics          = Write_Player_Physics (),
	       motd_player_collision = Write_Player_Collision (),
	       motd_ally_coop_cnt    = Write_Current_Num_Players_Coop (),
	       motd_plyr_dm_cnt	     = Write_Current_Num_Players_DM (),
	       motd_red_members_cnt  = Write_Red_Members_Count (),
	       motd_blue_members_cnt = Write_Blue_Members_Count (),
	       motd_help_and_info    = Write_Help_and_Info (),
	       motd_top_animation    = Animate_Top_MOTD_Frames (),
	       motd_bottom_animation = Animate_Bottom_MOTD_Frames (),
	       motd_removal_message  = Write_MOTD_Removal_Message (),
 	       motd_main_string, motd_extra_string, motd_client, motd_write_centerprint1;
 	       	       	       	       	
	// Sleeper: For Co-operative and Public Single Player (for solo speedrunning) modes.
	if (!cvar("deathmatch"))
	{
		motd_extra_string = sprintf ("%s%s%s%s%s", motd_ally_coop_cnt, motd_team_self_dmg, motd_team_coop_knock, motd_bunnyhop, motd_player_collision);
		if (!cvar("coop") && cvar("sv_public") == 1)
			motd_main_string = sprintf ("\n\nWelcome to Net QuakeWorld,\n%s%s%s%s%s", self.netname, motd_gameworld, motd_campaign_name, motd_difficulty, motd_physics);
		if (cvar("coop") >= REIGNITED_COOP && cvar("coop") <= ENHANCED_COOP)
			motd_main_string = sprintf ("\n\nWelcome to Net QuakeWorld,\n%s%s%s%s%s%s%s", self.netname, motd_gameworld, motd_campaign_name, motd_gametypes, motd_difficulty, motd_extra_string, motd_physics);
	}	
	
	// Sleeper: For Deathmatch Modes.
	if (!cvar("coop"))
	{
		if (cvar("deathmatch") == DM_DUEL || cvar("deathmatch") == DM_FFA)
			motd_main_string = sprintf ("\n\nWelcome to Net QuakeWorld,\n%s%s%s%s%s%s", self.netname, motd_gameworld, motd_gametypes, motd_runes, motd_plyr_dm_cnt, motd_physics);		
		if (cvar("deathmatch") >= DM_TDM && cvar("deathmatch") <= DM_OneFlagCTF)
		{
			motd_extra_string = sprintf ("%s%s%s%s%s", motd_red_members_cnt, motd_blue_members_cnt, motd_team_damage, motd_team_dm_knock, motd_bunnyhop);
			motd_main_string = sprintf ("\n\nWelcome to Net QuakeWorld,\n%s%s%s%s%s%s", self.netname, motd_gameworld, motd_gametypes, motd_runes, motd_extra_string, motd_physics);
		}
	}
	
	// Sleeper: Throw warnings if players use a unsupported or outdated source port. Which are version of FTE less than 6446, and ezQuake (Any. Engine-Dev needs to up their engine limits to fit 666, 999 with FTE Extensions).
	if (self.client == EzQ_CLIENT)
	{
		motd_client = "You're using ezQuake/nQuake source port,\nwhich is unsupported/outdated on this\nserver due to client limits being too\nlow. If you still want to use the\nsource port of choice, consider\ninforming the source port developer to\nincrease client limits.\n\n";
	}
	
	if (self.client == FTEQW_CLIENT)
	{
		motd_client = "You're using FTE QuakeWorld. If you're using\nversion 6202, consider updating to the latest version\nor you will experience getting errored\nout of the server when trying to\nuse FTE extensions.\n\n";
	}
	
	motd_write_centerprint1 = sprintf ("%s%s%s%s%s%s", motd_top_animation, motd_main_string, motd_help_and_info, motd_client, motd_removal_message, motd_bottom_animation);	
	id1_centerprint (self, motd_write_centerprint1); // Sleeper: The structure of MOTD.		
};

// What are our valid difficulties?
string() sprint_skill =
{
	if (cvar("skill") == 0) return "Easy";	
	if (cvar("skill") == 1) return "Normal";		
	if (cvar("skill") == 2) return "Hard";
	if (cvar("skill") == 3) return "Classic Nightmare!";
	if (cvar("skill") == 4) return "KEX Nightmare!";	
	if (cvar("skill") == 5) return "'Sleeper Must Die!'";
	
	return "a Unknown ";
};

// Show skill changes in console in Single Player or Coop.
void() MOTD_Skill =
{	
	if (deathmatch) return;

	sprint (self, "Playing on ");
	if (coop <= 4 && !deathmatch) sprint (self, sprint_skill());
	sprint (self, " Skill\n");
};

// Send MOTDs to PlayerPostThink
void() Send_MOTD =
{
	if (warmup_engaged) return;
	
	// Turn off MOTD with an input.
	// Interchangeable MOTD.
	Write_MOTD ();
		
	// If the player hits any of these inputs, the centerprint will disappear.
	if (self.button0 || self.button1 || self.button2)
	{
		id1_centerprint (self, "", "\n"); // Immediately remove current centerprint from screen (hopefully isn't repeating).
		self.motdgreeting = DISABLE_MOTD;			
	}
};


// Sleeper: Just needs a way to kill the menu.
/*
entity(void() func, float when) call_func_delayed =
{
	local entity temp = spawn ();
	temp.owner = self;
	temp.nextthink = time + when;
	temp.think = func;
	return temp;
};

void() intro_think =
{
	if (self.owner != world)
	{
		centerprint (self.owner, "if you can read this message then this works");
		self.think = intro_think;
		self.nextthink = time + 0.9;
	}
	else remove (self);
};

void() create_menu =
{
	local entity intro = call_func_delayed (intro_think, 0.5);
	intro.owner = self;
};
*/	